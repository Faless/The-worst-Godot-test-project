randi() % 1000 - 500
randi() % 1000000 - 500000
randf() * 1000 - 500
Vector2(randf() * 1000 - 500, randf() * 1000 - 500)
Vector3(randf() * 1000 - 500, randf() * 1000 - 500, randf() * 1000 - 500)

randi() % Autoload.RANGE - Autoload.RANGE / 2
randf() * Autoload.RANGE - Autoload.RANGE / 2

Transform(Vector3(randf() * 50,randf() * 50,randf() * 50),Vector3(randf() * 50,randf() * 50,randf() * 50),Vector3(randf() * 50,randf() * 50,randf() * 50),Vector3(randf() * 50,randf() * 50,randf() * 50)))

Transform2D(Vector2(randf() * 50,randf() * 50),Vector2(randf() * 50,randf() * 50),Vector2(randf() * 50,randf() * 50)))

 PoolVector3Array([Vector3(randf() * 50,randf() * 50,randf() * 50),Vector3(randf() * 50,randf() * 50,randf() * 50)]))
 PoolVector2Array([Vector2(randf() * 50,randf() * 50),Vector2(randf() * 50,randf() * 50)]))
 PoolByteArray([11,124,1241,24,21,214,12,11]))
 PoolIntArray([11,124,1241,24,21,214,12,11]))
 PoolRealArray([125125.125,12512.1251,122.124]))
 PoolStringArray(["Tak","Nie","Być może"]))
 PoolColorArray([Color(randf(),randf(),randf(),randf()), Color(randf(),randf(),randf(),randf())])

[124,214,214,124,214,214,2]
{"Ouo": 15, "Kompresja": 124}

 Rect2(Vector2(randf() * 50,randf() * 50),Vector2(randf() * 50,randf() * 50)))
 AABB(Vector3(randf() * 50,randf() * 50,randf() * 50),Vector3(randf() * 50,randf() * 50,randf() * 50)))
 Basis( Quat(randf() * 50,randf() * 50,randf() * 50,randf() * 50) )

Vector2(randf() * 50,randf() * 50))
Vector3(randf() * 50,randf() * 50,randf() * 50))

randf() * 50)
bool(randi()%2))
randi()%50)
Color(randf(),randf(),randf(),randf()))
load("res://Sprite" + str(randi()%4 + 1) + ".png"))
var qq : String = ""
qq += str(
qq = qq

		else: #RANDI
			if randi() % 2 == 1:

	if counter <= 0:
		counter = randf() * (C_COUNTER.y - C_COUNTER.x) + C_COUNTER.x
		if !Autoload.RANDI:
