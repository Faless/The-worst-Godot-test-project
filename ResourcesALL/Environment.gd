extends Node2D

var counter : float
var C_COUNTER : Vector2 = Vector2(0.5,1.0)

func _ready():
	counter = randf() * (C_COUNTER.y - C_COUNTER.x) + C_COUNTER.x

func _process(delta) -> void:
	counter -= delta
	var qq : String = ""
	qq = qq
	
	if counter <= 0:
		counter = randf() * (C_COUNTER.y - C_COUNTER.x) + C_COUNTER.x
		
		var q_Environment : Environment = Environment.new()
		
		q_Environment.set_background(randi() % Environment.BG_MAX)
		#q_Environment.set_sky(Sky.new())
		q_Environment.set_sky_custom_fov(randf() * 50)
		q_Environment.set_sky_orientation(Basis(Vector3(randf() * 50,randf() * 50,randf() * 50),Vector3(randf() * 50,randf() * 50,randf() * 50),Vector3(randf() * 50,randf() * 50,randf() * 50)))
		q_Environment.set_sky_rotation(Vector3(randf() * 50,randf() * 50,randf() * 50))
		q_Environment.set_sky_rotation_degrees(Vector3(randf() * 50,randf() * 50,randf() * 50))
		q_Environment.set_bg_color(Color(randf(),randf(),randf(),randf()))
		q_Environment.set_bg_energy(randf() * 50)
		q_Environment.set_canvas_max_layer(randi()%50)
		q_Environment.set_camera_feed_id(randi()%50)
		q_Environment.set_ambient_light_color(Color(randf(),randf(),randf(),randf()))
		q_Environment.set_ambient_light_energy(randf() * 50)
		q_Environment.set_ambient_light_sky_contribution(randf() * 50)
		q_Environment.set_fog_enabled(bool(randi()%2))
		q_Environment.set_fog_color(Color(randf(),randf(),randf(),randf()))
		q_Environment.set_fog_sun_color(Color(randf(),randf(),randf(),randf()))
		q_Environment.set_fog_sun_amount(randf() * 50)
		q_Environment.set_fog_depth_enabled(bool(randi()%2))
		q_Environment.set_fog_depth_begin(randf() * 50)
		q_Environment.set_fog_depth_end(randf() * 50)
		q_Environment.set_fog_depth_curve(randf() * 50)
		q_Environment.set_fog_transmit_enabled(bool(randi()%2))
		q_Environment.set_fog_transmit_curve(randf() * 50)
		q_Environment.set_fog_height_enabled(bool(randi()%2))
		q_Environment.set_fog_height_min(randf() * 50)
		q_Environment.set_fog_height_max(randf() * 50)
		q_Environment.set_fog_height_curve(randf() * 50)
		q_Environment.set_tonemapper( randi() % 4)#ToneMapper
		q_Environment.set_tonemap_exposure(randf() * 50)
		q_Environment.set_tonemap_white(randf() * 50)
		q_Environment.set_tonemap_auto_exposure(bool(randi()%2))
		q_Environment.set_tonemap_auto_exposure_grey(randf() * 50)
		q_Environment.set_tonemap_auto_exposure_min(randf() * 50)
		q_Environment.set_tonemap_auto_exposure_max(randf() * 50)
		q_Environment.set_tonemap_auto_exposure_speed(randf() * 50)
		q_Environment.set_ssr_enabled(bool(randi()%2))
		q_Environment.set_ssr_max_steps(randi()%50)
		q_Environment.set_ssr_fade_in(randf() * 50)
		q_Environment.set_ssr_fade_out(randf() * 50)
		q_Environment.set_ssr_depth_tolerance(randf() * 50)
		q_Environment.set_ssr_rough(bool(randi()%2))
		q_Environment.set_ssao_enabled(bool(randi()%2))
		q_Environment.set_ssao_radius(randf() * 50)
		q_Environment.set_ssao_intensity(randf() * 50)
		q_Environment.set_ssao_radius2(randf() * 50)
		q_Environment.set_ssao_intensity2(randf() * 50)
		q_Environment.set_ssao_bias(randf() * 50)
		q_Environment.set_ssao_direct_light_affect(randf() * 50)
		q_Environment.set_ssao_ao_channel_affect(randf() * 50)
		q_Environment.set_ssao_color(Color(randf(),randf(),randf(),randf()))
		q_Environment.set_ssao_quality(randi() % 3) #SSAO Quality
		q_Environment.set_ssao_blur(randi() % 4) # SSAO Blur
		q_Environment.set_ssao_edge_sharpness(randf() * 50)
		q_Environment.set_dof_blur_far_enabled(bool(randi()%2))
		q_Environment.set_dof_blur_far_distance(randf() * 50)
		q_Environment.set_dof_blur_far_transition(randf() * 50)
		q_Environment.set_dof_blur_far_amount(randf() * 50)
		q_Environment.set_dof_blur_far_quality(randi() % 3) #DOFBlurQuality
		q_Environment.set_dof_blur_near_enabled(bool(randi()%2))
		q_Environment.set_dof_blur_near_distance(randf() * 50)
		q_Environment.set_dof_blur_near_transition(randf() * 50)
		q_Environment.set_dof_blur_near_amount(randf() * 50)
		q_Environment.set_dof_blur_near_quality(randi() % 3) #DOFBlurQuality
		q_Environment.set_glow_enabled(bool(randi()%2))
		q_Environment.set_glow_level(randi()%7,bool(randi()%2)) #VisualServer::MAX_GLOW_LEVELS
		q_Environment.set_glow_intensity(randf() * 50)
		q_Environment.set_glow_strength(randf() * 50)
		q_Environment.set_glow_bloom(randf() * 50)
		q_Environment.set_glow_blend_mode(randi() % 4) #Blend Mode
		q_Environment.set_glow_hdr_bleed_threshold(randf() * 50)
		q_Environment.set_glow_hdr_luminance_cap(randf() * 50)
		q_Environment.set_glow_hdr_bleed_scale(randf() * 50)
		q_Environment.set_glow_bicubic_upscale(bool(randi()%2))
		q_Environment.set_adjustment_enable(bool(randi()%2))
		q_Environment.set_adjustment_brightness(randf() * 50)
		q_Environment.set_adjustment_contrast(randf() * 50)
		q_Environment.set_adjustment_saturation(randf() * 50)
		q_Environment.set_adjustment_color_correction(load("res://RES/Sprite" + str(randi()%4 + 1) + ".png"))
		
		if Autoload.WRONG_BUGS:
			q_Environment.set_background(randi() % 1000 - 500)
			q_Environment.set_sky(Sky.new())
			q_Environment.set_sky_custom_fov(randf() * 1000 - 500)
			q_Environment.set_sky_orientation(Basis(Vector3(randf() * 1000 - 500,randf() * 1000 - 500,randf() * 1000 - 500),Vector3(randf() * 1000 - 500,randf() * 1000 - 500,randf() * 1000 - 500),Vector3(randf() * 1000 - 500,randf() * 1000 - 500,randf() * 1000 - 500)))
			q_Environment.set_sky_rotation(Vector3(randf() * 1000 - 500,randf() * 1000 - 500,randf() * 1000 - 500))
			q_Environment.set_sky_rotation_degrees(Vector3(randf() * 1000 - 500,randf() * 1000 - 500,randf() * 1000 - 500))
			q_Environment.set_bg_color(Color(randf(),randf(),randf(),randf()))
			q_Environment.set_bg_energy(randf() * 1000 - 500)
			q_Environment.set_canvas_max_layer(randi() % 1000 - 500)
			q_Environment.set_camera_feed_id(randi() % 1000 - 500)
			q_Environment.set_ambient_light_color(Color(randf(),randf(),randf(),randf()))
			q_Environment.set_ambient_light_energy(randf() * 1000 - 500)
			q_Environment.set_ambient_light_sky_contribution(randf() * 1000 - 500)
			q_Environment.set_fog_enabled(bool(randi()%2))
			q_Environment.set_fog_color(Color(randf(),randf(),randf(),randf()))
			q_Environment.set_fog_sun_color(Color(randf(),randf(),randf(),randf()))
			q_Environment.set_fog_sun_amount(randf() * 1000 - 500)
			q_Environment.set_fog_depth_enabled(bool(randi()%2))
			q_Environment.set_fog_depth_begin(randf() * 1000 - 500)
			q_Environment.set_fog_depth_end(randf() * 1000 - 500)
			q_Environment.set_fog_depth_curve(randf() * 1000 - 500)
			q_Environment.set_fog_transmit_enabled(bool(randi()%2))
			q_Environment.set_fog_transmit_curve(randf() * 1000 - 500)
			q_Environment.set_fog_height_enabled(bool(randi()%2))
			q_Environment.set_fog_height_min(randf() * 1000 - 500)
			q_Environment.set_fog_height_max(randf() * 1000 - 500)
			q_Environment.set_fog_height_curve(randf() * 1000 - 500)
			q_Environment.set_tonemapper( randi() % 1000 - 500)#ToneMapper
			q_Environment.set_tonemap_exposure(randf() * 1000 - 500)
			q_Environment.set_tonemap_white(randf() * 1000 - 500)
			q_Environment.set_tonemap_auto_exposure(bool(randi()%2))
			q_Environment.set_tonemap_auto_exposure_grey(randf() * 1000 - 500)
			q_Environment.set_tonemap_auto_exposure_min(randf() * 1000 - 500)
			q_Environment.set_tonemap_auto_exposure_max(randf() * 1000 - 500)
			q_Environment.set_tonemap_auto_exposure_speed(randf() * 1000 - 500)
			q_Environment.set_ssr_enabled(bool(randi()%2))
			q_Environment.set_ssr_max_steps(randi() % 1000 - 500)
			q_Environment.set_ssr_fade_in(randf() * 1000 - 500)
			q_Environment.set_ssr_fade_out(randf() * 1000 - 500)
			q_Environment.set_ssr_depth_tolerance(randf() * 1000 - 500)
			q_Environment.set_ssr_rough(bool(randi()%2))
			q_Environment.set_ssao_enabled(bool(randi()%2))
			q_Environment.set_ssao_radius(randf() * 1000 - 500)
			q_Environment.set_ssao_intensity(randf() * 1000 - 500)
			q_Environment.set_ssao_radius2(randf() * 1000 - 500)
			q_Environment.set_ssao_intensity2(randf() * 1000 - 500)
			q_Environment.set_ssao_bias(randf() * 1000 - 500)
			q_Environment.set_ssao_direct_light_affect(randf() * 1000 - 500)
			q_Environment.set_ssao_ao_channel_affect(randf() * 1000 - 500)
			q_Environment.set_ssao_color(Color(randf(),randf(),randf(),randf()))
			q_Environment.set_ssao_quality(randi() % 1000 - 500) #SSAO Quality
			q_Environment.set_ssao_blur(randi() % 1000 - 500) # SSAO Blur
			q_Environment.set_ssao_edge_sharpness(randf() * 1000 - 500)
			q_Environment.set_dof_blur_far_enabled(bool(randi()%2))
			q_Environment.set_dof_blur_far_distance(randf() * 1000 - 500)
			q_Environment.set_dof_blur_far_transition(randf() * 1000 - 500)
			q_Environment.set_dof_blur_far_amount(randf() * 1000 - 500)
			q_Environment.set_dof_blur_far_quality(randi() % 1000 - 500) #DOFBlurQuality
			q_Environment.set_dof_blur_near_enabled(bool(randi()%2))
			q_Environment.set_dof_blur_near_distance(randf() * 1000 - 500)
			q_Environment.set_dof_blur_near_transition(randf() * 1000 - 500)
			q_Environment.set_dof_blur_near_amount(randf() * 1000 - 500)
			q_Environment.set_dof_blur_near_quality(randi() % 1000 - 500) #DOFBlurQuality
			q_Environment.set_glow_enabled(bool(randi()%2))
			q_Environment.set_glow_level(randi() % 1000 - 500,bool(randi()%2)) #VisualServer::MAX_GLOW_LEVELS
			q_Environment.set_glow_intensity(randf() * 1000 - 500)
			q_Environment.set_glow_strength(randf() * 1000 - 500)
			q_Environment.set_glow_bloom(randf() * 1000 - 500)
			q_Environment.set_glow_blend_mode(randi() % 1000 - 500) #Blend Mode
			q_Environment.set_glow_hdr_bleed_threshold(randf() * 1000 - 500)
			q_Environment.set_glow_hdr_luminance_cap(randf() * 1000 - 500)
			q_Environment.set_glow_hdr_bleed_scale(randf() * 1000 - 500)
			q_Environment.set_glow_bicubic_upscale(bool(randi()%2))
			q_Environment.set_adjustment_enable(bool(randi()%2))
			q_Environment.set_adjustment_brightness(randf() * 1000 - 500)
			q_Environment.set_adjustment_contrast(randf() * 1000 - 500)
			q_Environment.set_adjustment_saturation(randf() * 1000 - 500)
			q_Environment.set_adjustment_color_correction(load("res://RES/Sprite" + str(randi()%4 + 1) + ".png"))
